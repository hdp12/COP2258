{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fmodern\fcharset0 Courier-Bold;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Oblique;\f4\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red234\green234\blue234;
\red193\green193\blue193;\red18\green139\blue2;\red45\green68\blue134;\red83\green83\blue83;\red43\green139\blue39;
\red1\green32\blue135;\red0\green0\blue255;\red0\green0\blue83;\red11\green85\blue38;\red190\green74\blue193;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\sa300

\f0\b\fs40 \cf2 \cb3 Java Source, Compiler, and Virtual Machine\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 Java source code consists of java source files (classes), folder \'93src\'94 in eclipse\
The compiler converts java source into java \'93byte code\'94 which can be executed by the java virtual machine. This byte code can be shared and run on any platform that the java virtual machine is installed.\
The program \'93java\'94 is a \'93virtual machine\'94 which runs java byte code on a computer. The virtual machine interprets byte code so that it can run the program on any platform.\
\pard\pardeftab720\sl340\sa300

\b\fs40 \cf2 Java Coding Basics\
\pard\pardeftab720\sl340\sa300

\fs32 \cf2 A Java Class\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 Java code which can be used to make objects. A class has methods and variables, ideally to accomplish some task.\uc0\u8232 How to define a class:\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\b \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  ClassName \cf6 \{\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl400\sa300

\f0 \cf2 \cb3 \uc0\u8232 \u8232 The ClassName will be the same name as the java file: ClassName.java. Capitalization (the CASE) of the letters matters. For example \'93classname\'94 and \'93ClassName\'94 would be two different classes.\
\pard\pardeftab720\sl400\sa300
{\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/tutorial/java/concepts/class.html"}}{\fldrslt \cf7 http://docs.oracle.com/javase/tutorial/java/concepts/class.html}}\
\pard\pardeftab720\sl340\sa300

\b\fs32 \cf2 Scope\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 Scope is a block of code encapsulated by curly braces \{\}.\uc0\u8232 {\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/expressions.html"}}{\fldrslt \cf7 http://docs.oracle.com/javase/tutorial/java/nutsandbolts/expressions.html}}\
Things inside a scope can see everything inside that scope and the things that scope is inside. Things in one scope cannot see into other scopes if they are not nested.\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f2 \cf6 \cb1 \{\cf0 \
A  
\f3\i \cf8 // A can see B, but not C or D.
\f2\i0 \cf0 \
B  
\f3\i \cf8 // B can see A, but not C or D.
\f2\i0 \cf0 \
 \cf6 \{\cf0  \
   C 
\f3\i \cf8 // C can see A B, but not D.
\f2\i0 \cf0 \
 \cf6 \}\cf0 \
 \cf6 \{\cf0 \
   D 
\f3\i \cf8 // D can see A B, but not C.
\f2\i0 \cf0 \
 \cf6 \}\cf0 \
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Method\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 A method completes a some function, a sequence of statements. A method can have many variables and statements, something for the program to do.\
Primitive types passed to a method are passed to the method with the value the variable holds.\uc0\u8232 Primitive types returned from a method are passed back to the method that called it with the value the variable holds.\u8232 \'96 Types must match for assignment for returns and parameters\
How to define a method:\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f2 \cf9 \cb1 <
\f1\b \cf0 return
\f2\b0  type\cf9 >\cf0  MethodName \cf6 (\cf0  \cf9 <\cf0 parameter list\cf9 >\cf0  \cf6 )\cf0  \cf6 \{\cf0 \
	
\f3\i \cf8 // statements
\f2\i0 \cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl400\sa300

\f4 \cf0 \cb3 
\f0 \cf2 \
\pard\pardeftab720\sl340\sa300

\b\fs32 \cf2 Statements\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 Statements perform some operation some operation: calling a method, assigning a variable, creating objects, completing expressions. These end with a semicolon.\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f2 \cf10 \cb1 String\cf0  s \cf9 =\cf0  \cf11 "Hello"\cf9 ;\cf0  
\f3\i \cf8 // A statement that assigns 10 to the int x
\f2\i0 \cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f1\b \cf12 char
\f2\b0 \cf0  c \cf9 =\cf0  s.\cf13 charAt\cf6 (\cf14 0\cf6 )\cf9 ;\cf0  
\f3\i \cf8 // A statement that calls the charAt method from s
\f2\i0 \cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Control Flow Statements\
\pard\pardeftab720\sl400\sa300

\fs24 \cf2 Control: if/else
\b0 \uc0\u8232 These statements perform an operation depending on if something is true or not. Read the following textbook resource:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\sa100
\ls1\ilvl0\cf7 		{\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/if.html"}}{\fldrslt If/else statements}}\cf2 \
\pard\pardeftab720\sl400\sa300

\b \cf2 Flow: while/for
\b0 \uc0\u8232 These statements perform some operation multiple times while some condition is true. Read the following textbook resources:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\sa100
\ls2\ilvl0\cf7 		{\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html"}}{\fldrslt While loops}}\cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls2\ilvl0\cf7 		{\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/for.html"}}{\fldrslt For loops\uc0\u8232 }}\cf2 \
\pard\pardeftab720\sl340\sa300

\b\fs32 \cf2 Expressions\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 These are constructs in a language which resolve to a value. e.g. 1+1, False == True\uc0\u8232 Performing arithmetic (add +, subtract -, multiply *, divide /, modulus %)\u8232 Compare variables: ==, <, >, =<, =>, !=\
Logical Operators: and: &&, or: ||\
Assignment: The equals symbol \'93=\'94\
\pard\pardeftab720\sl400\sa300
{\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/expressions.html"}}{\fldrslt \cf7 http://docs.oracle.com/javase/tutorial/java/nutsandbolts/expressions.html}}\
\pard\pardeftab720\sl340\sa300

\b\fs32 \cf2 Variables\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 Primitive variables:\uc0\u8232 Base types in the java language that represent numbers, characters, or True/False\u8232 int, float, double, char, boolean\u8232 {\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"}}{\fldrslt \cf7 http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html}}\
Object variables:\uc0\u8232 Object variables are given the type of a java Class. We will see more about this in a later lesson.\
\pard\pardeftab720\sl340\sa300

\b\fs32 \cf2 Printing data out using method statements (in java)\
\pard\pardeftab720\sl400\sa300
{\field{\*\fldinst{HYPERLINK "http://docs.oracle.com/javase/6/docs/api/java/io/PrintStream.html"}}{\fldrslt 
\b0\fs24 \cf7 http://docs.oracle.com/javase/6/docs/api/java/io/PrintStream.html}}
\b0\fs24 \

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f2 \cf10 \cb1 System\cf0 .\cf13 out\cf0 .\cf13 print\cf6 ()\cf0 \
\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 ()\cf0 \cell \lastrow\row
\pard\pardeftab720\sl400\sa300

\f0 \cf2 \cb3 What kinds of variable types can the method print and println take as parameters?\
\pard\pardeftab720\sl340\sa300

\b\fs40 \cf2 Lecture Code Examples\
\pard\pardeftab720\sl340\sa300

\fs32 \cf2 Using primitive variables\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12920\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\fs24 \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  Demo \cf6 \{\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  main\cf6 (\cf10 String\cf6 []\cf0  args\cf6 )\cf0  \cf6 \{\cf0 \
		
\f1\b \cf12 int
\f2\b0 \cf0  x \cf9 =\cf0  \cf14 1000\cf9 ;\cf0  
\f3\i \cf8 // int x is a primitive variable being declared 
\f2\i0 \cf0 \
				
\f3\i \cf8 // and assigned the value 1000
\f2\i0 \cf0 \
\'a0\
		
\f1\b \cf12 char
\f2\b0 \cf0  c \cf9 =\cf0  \cf11 'a'\cf9 ;\cf0  
\f3\i \cf8 // char c is a primitive variable being declared 
\f2\i0 \cf0 \
				
\f3\i \cf8 // and assigned the value 'a'
\f2\i0 \cf0 \
\'a0\
		
\f1\b \cf12 double
\f2\b0 \cf0  v \cf9 =\cf0  \cf14 10.10\cf9 ;\cf0  
\f3\i \cf8 // double x is a primitive variable being declared 
\f2\i0 \cf0 \
				
\f3\i \cf8 // and assigned the value 10.0.
\f2\i0 \cf0 \
\'a0\
		
\f1\b \cf12 boolean
\f2\b0 \cf0  b \cf9 =\cf0  
\f1\b \cf12 true
\f2\b0 \cf9 ;\cf0  
\f3\i \cf8 // double x is a primitive variable being declared 
\f2\i0 \cf0 \
				
\f3\i \cf8 // and assigned the value true.
\f2\i0 \cf0 \
\'a0\
		
\f3\i \cf8 // After this point, you do not have to say "int x" or "char c" 
\f2\i0 \cf0 \
		
\f3\i \cf8 // anymore to refer to x or c.  These variables have already 
\f2\i0 \cf0 \
		
\f3\i \cf8 // been declared.  To refer to them again,
\f2\i0 \cf0 \
		
\f3\i \cf8 // you simply call them by name.
\f2\i0 \cf0 \
\'a0\
		x \cf9 =\cf0  \cf14 200\cf9 ;\cf0  
\f3\i \cf8 // x is being reassigned to 200.
\f2\i0 \cf0 \
		\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf0 x\cf6 )\cf9 ;\cf0  
\f3\i \cf8 // x is being passed to the println method.
\f2\i0 \cf0 \
	\cf6 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Parameter passing, getting return values\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12760\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\fs24 \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  Demo \cf6 \{\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  main\cf6 (\cf10 String\cf6 []\cf0  args\cf6 )\cf0  \cf6 \{\cf0 \
		
\f1\b \cf12 int
\f2\b0 \cf0  x \cf9 =\cf0  \cf14 1000\cf9 ;\cf0  
\f3\i \cf8 // int x is a primitive variable being declared 
\f2\i0 \cf0 \
				
\f3\i \cf8 // and assigned the value 1000
\f2\i0 \cf0 \
\'a0\
		
\f1\b \cf12 int
\f2\b0 \cf0  x2 \cf9 =\cf0  addOne\cf6 (\cf0 x\cf6 )\cf9 ;\cf0  
\f3\i \cf8 // this is calling the addOne method
\f2\i0 \cf0 \
					
\f3\i \cf8 // providing x as the parameter
\f2\i0 \cf0 \
					
\f3\i \cf8 // and putting the return in an int named x2
\f2\i0 \cf0 \
\'a0\
		\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf0 x\cf6 )\cf9 ;\cf0  
\f3\i \cf8 // What value will this print?
\f2\i0 \cf0 \
	\cf6 \}\cf0 \
\'a0\
	
\f3\i \cf8 // this method named addOne takes an int parameter and returns an int
\f2\i0 \cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 int
\f2\b0 \cf0  addOne\cf6 (
\f1\b \cf12 int
\f2\b0 \cf0  geo\cf6 )\cf0  \cf6 \{\cf0  
\f3\i \cf8 // geo is an int parameter variable
\f2\i0 \cf0 \
\'a0\
		
\f1\b \cf12 int
\f2\b0 \cf0  r \cf9 =\cf0  geo \cf9 +\cf0  \cf14 1\cf9 ;\cf0 	
\f3\i \cf8 // This is an arithmetic expression 
\f2\i0 \cf0 \
					
\f3\i \cf8 // the result is being assigned to r
\f2\i0 \cf0 \
\'a0\
		
\f1\b return
\f2\b0  r\cf9 ;\cf0  
\f3\i \cf8 // r is an int, which matches with the method return type
\f2\i0 \cf0 \
	\cf6 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Using if, else if, and else\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\fs24 \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  Demo \cf6 \{\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  main\cf6 (\cf10 String\cf6 []\cf0  args\cf6 )\cf0  \cf6 \{\cf0 \
		\cf10 String\cf0  str \cf9 =\cf0  getMessage\cf6 (\cf14 10\cf6 )\cf9 ;\cf0 \
		\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf0 str\cf6 )\cf9 ;\cf0 \
\'a0\
		\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf0 getMessage\cf6 (\cf14 55\cf6 ))\cf9 ;\cf0 \
		\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf0 getMessage\cf6 (\cf14 50\cf6 ))\cf9 ;\cf0 \
	\cf6 \}\cf0 \
\'a0\
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  \cf10 String\cf0  getMessage\cf6 (
\f1\b \cf12 int
\f2\b0 \cf0  x\cf6 )\cf0  \cf6 \{\cf0 \
		\cf10 String\cf0  s \cf9 =\cf0  \cf11 ""\cf9 ;\cf0 \
		
\f1\b if
\f2\b0 \cf6 (\cf0 x \cf9 <\cf0  \cf14 50\cf6 )\cf0  \cf6 \{\cf0 \
			s \cf9 =\cf0  \cf11 "Less than 50"\cf9 ;\cf0 \
		\cf6 \}\cf0 \
		
\f1\b else
\f2\b0  
\f1\b if
\f2\b0 \cf6 (\cf0 x \cf9 ==\cf0  \cf14 50\cf6 )\cf0  \cf6 \{\cf0 \
			s \cf9 =\cf0  \cf11 "Equal to 50"\cf9 ;\cf0 \
		\cf6 \}\cf0 \
		
\f1\b else
\f2\b0 	\cf6 \{\cf0 \
			s \cf9 =\cf0  \cf11 "Greater than 50"\cf9 ;\cf0 \
		\cf6 \}\cf0 \
		
\f1\b return
\f2\b0  s\cf9 ;\cf0 \
	\cf6 \}\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Using while loops\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\fs24 \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  Demo2 \cf6 \{\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  main\cf6 (\cf10 String\cf0  args\cf6 [])\cf0  \cf6 \{\cf0 \
		
\f1\b \cf12 int
\f2\b0 \cf0  x \cf9 =\cf0  \cf14 0\cf9 ;\cf0 \
		
\f1\b while
\f2\b0 \cf6 (\cf0 x \cf9 <\cf0  \cf14 5\cf6 )\cf0  \cf6 \{\cf0 \
			\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf0 x\cf6 )\cf9 ;\cf0 \
			x \cf9 =\cf0  x \cf9 +\cf0  \cf14 2\cf9 ;\cf0 \
		\cf6 \}\cf0 \
		\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf11 "This is x at the end: "\cf0  \cf9 +\cf0  x\cf6 )\cf9 ;\cf0 \
	\cf6 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Using for loops\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\fs24 \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  Demo3 \cf6 \{\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  main\cf6 (\cf10 String\cf6 []\cf0  args\cf6 )\cf0  \cf6 \{\cf0 \
		
\f3\i \cf8 // Create a variable; when to stop; increment
\f2\i0 \cf0 \
		
\f1\b for
\f2\b0 \cf6 (
\f1\b \cf12 int
\f2\b0 \cf0  i \cf9 =\cf0  \cf14 0\cf9 ;\cf0  i \cf9 <\cf0  \cf14 5\cf9 ;\cf0  i \cf9 =\cf0  i \cf9 +\cf0  \cf14 2\cf6 )\cf0  \cf6 \{\cf0 \
			\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf0 i\cf6 )\cf9 ;\cf0 \
		\cf6 \}\cf0 \
	\cf6 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Checking divisibility for lots of numbers\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\fs24 \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  Demo4 \cf6 \{\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  main\cf6 (\cf10 String\cf6 []\cf0  args\cf6 )\cf0  \cf6 \{\cf0 \
		
\f1\b for
\f2\b0  \cf6 (
\f1\b \cf12 int
\f2\b0 \cf0  i \cf9 =\cf0  \cf14 0\cf9 ;\cf0  i \cf9 <\cf0  \cf14 20\cf9 ;\cf0  i\cf9 =\cf0 i\cf9 +\cf14 1\cf6 )\cf0  \cf6 \{\cf0 \
			hopskip\cf6 (\cf0 i\cf6 )\cf9 ;\cf0 \
		\cf6 \}\cf0 \
	\cf6 \}\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  hopskip\cf6 (
\f1\b \cf12 int
\f2\b0 \cf0  x\cf6 )\cf0  \cf6 \{\cf0 \
		\cf10 System\cf0 .\cf13 out\cf0 .\cf13 print\cf6 (\cf0 x \cf9 +\cf0  \cf11 ": "\cf6 )\cf9 ;\cf0 \
		
\f3\i \cf8 // thing1 % thing2, if == 0 then
\f2\i0 \cf0 \
		
\f3\i \cf8 // thing1 is divisible by thing2
\f2\i0 \cf0 \
		
\f1\b if
\f2\b0  \cf6 (\cf0  \cf6 (\cf0 x \cf9 %\cf0  \cf14 2\cf0  \cf9 ==\cf0  \cf14 0\cf6 )\cf0  \cf9 &&\cf0  \cf6 (\cf0 x \cf9 %\cf0  \cf14 7\cf0  \cf9 ==\cf0  \cf14 0\cf6 )\cf0  \cf6 )\cf0  \cf6 \{\cf0 \
			\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf11 "x is divisible by 2 and 7"\cf6 )\cf9 ;\cf0 \
		\cf6 \}\cf0 \
		
\f1\b else
\f2\b0 	 \cf6 \{\cf0 \
			\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf11 "x is not divisible by 2 and 7"\cf6 )\cf9 ;\cf0 \
		\cf6 \}\cf0 \
	\cf6 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl340\sa300

\f0\b\fs32 \cf2 \cb3 Code from lecture, May 22.\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf5 \trbrdrl\brdrs\brdrw40\brdrcf5 \trbrdrb\brdrs\brdrw40\brdrcf5 \trbrdrr\brdrs\brdrw40\brdrcf5 
\clvertalt \clcbpat4 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf5 \clbrdrl\brdrs\brdrw20\brdrcf5 \clbrdrb\brdrs\brdrw20\brdrcf5 \clbrdrr\brdrs\brdrw20\brdrcf5 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\fs24 \cf0 \cb1 public
\f2\b0  
\f1\b class
\f2\b0  MyFirstClass \cf6 \{\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  
\f1\b \cf12 void
\f2\b0 \cf0  main\cf6 (\cf10 String\cf6 []\cf0  args\cf6 )\cf0  \cf6 \{\cf0 \
		
\f1\b \cf12 int
\f2\b0 \cf0  x \cf9 =\cf0  \cf14 0\cf9 ;\cf0 \
		
\f1\b while
\f2\b0 \cf6 (\cf0 x \cf9 <\cf0  \cf14 20\cf6 )\cf0  \cf6 \{\cf0 \
			x \cf9 =\cf0  x \cf9 +\cf0  \cf14 1\cf9 ;\cf0 \
			
\f3\i \cf8 // Calling the check method, providing int x 
\f2\i0 \cf0 \
			
\f3\i \cf8 // as a parameter, and getting back
\f2\i0 \cf0 \
			
\f3\i \cf8 // the returned String
\f2\i0 \cf0 \
			\cf10 String\cf0  s \cf9 =\cf0  check\cf6 (\cf0 x\cf6 )\cf9 ;\cf0 \
			\cf10 System\cf0 .\cf13 out\cf0 .\cf13 println\cf6 (\cf11 "x is "\cf0  \cf9 +\cf0  x \cf9 +\cf0  \cf11 ". "\cf0  \cf9 +\cf0  s\cf6 )\cf9 ;\cf0 \
		\cf6 \}\cf0 \
	\cf6 \}\cf0 \
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  \cf10 String\cf0  check\cf6 (
\f1\b \cf12 int
\f2\b0 \cf0  x\cf6 )\cf0  \cf6 \{\cf0 \
		
\f3\i \cf8 // This is checking the divisibility of x by 2
\f2\i0 \cf0 \
		
\f1\b if
\f2\b0  \cf6 ((\cf0 x \cf9 %\cf0  \cf14 2\cf6 )\cf0  \cf9 ==\cf0  \cf14 0\cf6 )\cf0  \cf6 \{\cf0 \
			
\f1\b return
\f2\b0  \cf11 "x is even"\cf9 ;\cf0 \
		\cf6 \}\cf0 \
		
\f1\b else
\f2\b0  \cf6 \{\cf0 \
			
\f1\b return
\f2\b0  \cf11 "x is odd"\cf9 ;\cf0 \
		\cf6 \}\cf0 \
\'a0\
	\cf6 \}\cf0 \
\'a0\
	
\f1\b public
\f2\b0  
\f1\b static
\f2\b0  \cf10 String\cf0  check2\cf6 (
\f1\b \cf12 int
\f2\b0 \cf0  x\cf6 )\cf0  \cf6 \{\cf0 \
		
\f3\i \cf8 // This is checking the divisibility of x by 2 and 7
\f2\i0 \cf0 \
		
\f1\b if
\f2\b0  \cf6 (\cf0  \cf6 ((\cf0 x \cf9 %\cf0  \cf14 2\cf6 )\cf0  \cf9 ==\cf0  \cf14 0\cf6 )\cf0  \cf9 &&\cf0  \cf6 ((\cf0 x \cf9 %\cf0  \cf14 7\cf6 )\cf0  \cf9 ==\cf0  \cf14 0\cf6 )\cf0  \cf6 )\cf0  \cf6 \{\cf0 \
			
\f1\b return
\f2\b0  \cf11 "x is div by 2 and 7"\cf9 ;\cf0 \
		\cf6 \}\cf0 \
		
\f1\b else
\f2\b0  \cf6 \{\cf0 \
			
\f1\b return
\f2\b0  \cf11 "x is not div by 2 and 7"\cf9 ;\cf0 \
		\cf6 \}\cf0 \
\'a0\
	\cf6 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf6 \}\cf0 \cell \lastrow\row
}