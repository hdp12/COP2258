{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fnil\fcharset0 LucidaGrande;\f1\fmodern\fcharset0 Courier-Oblique;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red83\green83\blue83;
\red234\green234\blue234;\red193\green193\blue193;\red18\green139\blue2;\red0\green0\blue83;\red43\green139\blue39;
\red1\green32\blue135;\red11\green85\blue38;\red0\green0\blue255;\red10\green82\blue135;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420

\f0\b\fs38 \cf2 \cb3 Interfaces\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 An interface declares abstract methods. Abstract methods are not implemented in the interface. The interface is a contract to the Java compiler that any class that implements that interface MUST have implemented that method.\
A class can extend only one other class, as Java only allows \'93single-inheritance\'94. In other words, a class can only inherit methods and variables from one parent class, and that parent\'92s parents. However, a class can implement as many interfaces as it wants. This allows you to guarantee that a class will have certain methods without having to relate them through class inheritance (extends), which sometimes does not make sense to do.\
\pard\pardeftab720\sl360\sa300

\b\fs40 \cf2 Toy example: Flyable\
\pard\pardeftab720\sl400\sa300

\b0\fs24 \cf2 A Bird,Plane,and Superman do not have any superclass in common except for Object. Since it doesn\'92t make sense for all Objects to fly, they can all implement the Flyable interface and guarantee to any class that uses Bird,Plane,Superman that they have the method public void fly().\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf6 \trbrdrl\brdrs\brdrw40\brdrcf6 \trbrdrb\brdrs\brdrw40\brdrcf6 \trbrdrr\brdrs\brdrw40\brdrcf6 
\clvertalt \clcbpat5 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\i \cf4 \cb1 // When a class implements Flyable, it MUST implement 
\f2\i0 \cf0 \

\f1\i \cf4 // the abstract method fly from the Flyable interface.
\f2\i0 \cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b interface
\f2\b0  Flyable \cf7 \{\cf0 \
	
\f3\b public
\f2\b0  
\f3\b \cf8 void
\f2\b0 \cf0  fly\cf7 ()\cf9 ;\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \cell \lastrow\row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf6 \trbrdrl\brdrs\brdrw40\brdrcf6 \trbrdrb\brdrs\brdrw40\brdrcf6 \trbrdrr\brdrs\brdrw40\brdrcf6 
\clvertalt \clcbpat5 \clwWidth13060\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\i \cf4 // Superman is a Humanoid.  Superman will inherit from the Humanoid and Object classes
\f2\i0 \cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b class
\f2\b0  Humanoid \cf7 \{\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b class
\f2\b0  Superman 
\f3\b extends
\f2\b0  Humanoid 
\f3\b implements
\f2\b0  Flyable \cf7 \{\cf0 \
	
\f3\b \cf8 void
\f2\b0 \cf0  superpowers\cf7 ()\{\cf0 \
\'a0\
	\cf7 \}\cf0 \
	
\f3\b public
\f2\b0  
\f3\b \cf8 void
\f2\b0 \cf0  fly\cf7 ()\cf0  \cf7 \{\cf0 \
		\cf10 System\cf0 .\cf11 out\cf0 .\cf11 println\cf7 (\cf12 "Superman is flying"\cf7 )\cf9 ;\cf0 \
	\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320

\f1\i \cf4 // Bird is an Animal.  It will inherit from the Animal and Object classes.
\f2\i0 \cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b class
\f2\b0  Animal \cf7 \{\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b class
\f2\b0  Bird 
\f3\b extends
\f2\b0  Animal 
\f3\b implements
\f2\b0  Flyable\cf7 \{\cf0 \
	
\f3\b \cf8 void
\f2\b0 \cf0  wings\cf7 ()\{\cf0 \
\'a0\
	\cf7 \}\cf0 \
	
\f3\b public
\f2\b0  
\f3\b \cf8 void
\f2\b0 \cf0  fly\cf7 ()\cf0  \cf7 \{\cf0 \
		\cf10 System\cf0 .\cf11 out\cf0 .\cf11 println\cf7 (\cf12 "It's a bird"\cf7 )\cf9 ;\cf0 \
	\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320

\f1\i \cf4 //Plane is a Machine.  It will inherit from the Machine and Object classes.
\f2\i0 \cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b class
\f2\b0  Machine \cf7 \{\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b class
\f2\b0  Plane 
\f3\b extends
\f2\b0  Machine 
\f3\b implements
\f2\b0  Flyable\cf7 \{\cf0 \
	
\f3\b \cf8 void
\f2\b0 \cf0  engine\cf7 ()\cf0  \cf7 \{\cf0 \
\'a0\
	\cf7 \}\cf0 \
	
\f3\b public
\f2\b0  
\f3\b \cf8 void
\f2\b0 \cf0  fly\cf7 ()\cf0  \cf7 \{\cf0 \
		\cf10 System\cf0 .\cf11 out\cf0 .\cf11 println\cf7 (\cf12 "It's a plane"\cf7 )\cf9 ;\cf0 \
	\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \cell \lastrow\row
\pard\pardeftab720\sl360\sa300

\f0\b\fs40 \cf2 \cb3 Real-world example: Comparable\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf6 \trbrdrl\brdrs\brdrw40\brdrcf6 \trbrdrb\brdrs\brdrw40\brdrcf6 \trbrdrr\brdrs\brdrw40\brdrcf6 
\clvertalt \clcbpat5 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f1\i\b0\fs24 \cf4 \cb1 // This class implements Comparable, which means it must 
\f2\i0 \cf0 \

\f1\i \cf4 // implement the compareTo(Object arg0) method
\f2\i0 \cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 public
\f2\b0  
\f3\b class
\f2\b0  Person 
\f3\b implements
\f2\b0  \cf10 Comparable\cf7 \{\cf0 \
	
\f3\b private
\f2\b0  \cf10 String\cf0  firstName, lastName\cf9 ;\cf0 \
	
\f3\b public
\f2\b0  Person\cf7 (\cf10 String\cf0  f, \cf10 String\cf0  l\cf7 )\cf0  \cf7 \{\cf0 \
		firstName \cf9 =\cf0  f\cf9 ;\cf0 \
		lastName \cf9 =\cf0  l\cf9 ;\cf0 \
	\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f1\i \cf4 // This method overrides toString() from the Object class
\f2\i0 \cf0 \
	
\f3\b public
\f2\b0  \cf10 String\cf0  toString\cf7 ()\cf0  \cf7 \{\cf0 \
		
\f3\b return
\f2\b0  firstName \cf9 +\cf0  \cf12 " "\cf0  \cf9 +\cf0  lastName\cf9 ;\cf0 \
	\cf7 \}\cf0 \

\f1\i \cf4 // This method implements the abstract method from the Comparable interface
\f2\i0 \cf0 \
	
\f3\b public
\f2\b0  
\f3\b \cf8 int
\f2\b0 \cf0  compareTo\cf7 (\cf10 Object\cf0  arg0\cf7 )\cf0  \cf7 \{\cf0 \
		Person p \cf9 =\cf0  \cf7 (\cf0 Person\cf7 )\cf0 arg0\cf9 ;\cf0 \
		
\f3\b \cf8 int
\f2\b0 \cf0  sort \cf9 =\cf0  firstName.\cf11 compareTo\cf7 (\cf0 p.\cf11 firstName\cf7 )\cf9 ;\cf0 \
		
\f3\b return
\f2\b0  sort\cf9 ;\cf0 \
	\cf7 \}\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \cell \lastrow\row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trcbpat3 \tamart100 \tamarb200 \trbrdrt\brdrs\brdrw40\brdrcf6 \trbrdrl\brdrs\brdrw40\brdrcf6 \trbrdrb\brdrs\brdrw40\brdrcf6 \trbrdrr\brdrs\brdrw40\brdrcf6 
\clvertalt \clcbpat5 \clwWidth12460\clftsWidth3 \clbrdrt\brdrs\brdrw20\brdrcf6 \clbrdrl\brdrs\brdrw20\brdrcf6 \clbrdrb\brdrs\brdrw20\brdrcf6 \clbrdrr\brdrs\brdrw20\brdrcf6 \clpadt60 \clpadl200 \clpadb60 \clpadr200 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\sl320

\f3\b \cf0 import
\f2\b0  \cf13 java.util.ArrayList\cf9 ;\cf0 \

\f3\b import
\f2\b0  \cf13 java.util.Collections\cf9 ;\cf0 \
\'a0\

\f3\b public
\f2\b0  
\f3\b class
\f2\b0  Test \cf7 \{\cf0 \
	
\f3\b public
\f2\b0  
\f3\b static
\f2\b0  
\f3\b \cf8 void
\f2\b0 \cf0  main\cf7 (\cf10 String\cf0  args\cf7 [])\cf0  \cf7 \{\cf0 \
		Person x1 \cf9 =\cf0  
\f3\b new
\f2\b0  Person\cf7 (\cf12 "Geo"\cf0 ,\cf12 "Miller"\cf7 )\cf9 ;\cf0 \
		Person x2 \cf9 =\cf0  
\f3\b new
\f2\b0  Person\cf7 (\cf12 "Paul"\cf0 , \cf12 "Anderson"\cf7 )\cf9 ;\cf0 \
		Person x3 \cf9 =\cf0  
\f3\b new
\f2\b0  Person\cf7 (\cf12 "Ben"\cf0 , \cf12 "M"\cf7 )\cf9 ;\cf0 \
		Person x4 \cf9 =\cf0  
\f3\b new
\f2\b0  Person\cf7 (\cf12 "Ken"\cf0 ,\cf12 "B"\cf7 )\cf9 ;\cf0 \
		ArrayList\cf9 <\cf0 Person\cf9 >\cf0  list \cf9 =\cf0  
\f3\b new
\f2\b0  ArrayList\cf9 <\cf0 Person\cf9 >\cf7 ()\cf9 ;\cf0 \
		list.\cf11 add\cf7 (\cf0 x1\cf7 )\cf9 ;\cf0 \
		list.\cf11 add\cf7 (\cf0 x2\cf7 )\cf9 ;\cf0 \
		list.\cf11 add\cf7 (\cf0 x3\cf7 )\cf9 ;\cf0 \
		list.\cf11 add\cf7 (\cf0 x4\cf7 )\cf9 ;\cf0 \
\'a0\
		
\f3\b for
\f2\b0  \cf7 (\cf0 Person s \cf9 :\cf0  list\cf7 )\cf0  \cf7 \{\cf0 \
			\cf10 System\cf0 .\cf11 out\cf0 .\cf11 println\cf7 (\cf0 s\cf7 )\cf9 ;\cf0 \
		\cf7 \}\cf0 \
		\cf10 System\cf0 .\cf11 out\cf0 .\cf11 println\cf7 ()\cf9 ;\cf0 \
\'a0\
\pard\intbl\itap1\pardeftab720\sl320

\f1\i \cf4 // Collections.sort() requires that the objects 
\f2\i0 \cf0 \

\f1\i \cf4 // in the list implement Comparable
\f2\i0 \cf0 \
		\cf10 Collections\cf0 .\cf11 sort\cf7 (\cf0 list\cf7 )\cf9 ;\cf0 \
		
\f3\b for
\f2\b0  \cf7 (\cf0 Person s \cf9 :\cf0  list\cf7 )\cf0  \cf7 \{\cf0 \
			\cf10 System\cf0 .\cf11 out\cf0 .\cf11 println\cf7 (\cf0 s\cf7 )\cf9 ;\cf0 \
		\cf7 \}\cf0 \
	\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320
\cf7 \}\cf0 \
\pard\intbl\itap1\pardeftab720\sl320

\f1\i \cf4 /* Program output: \
Geo Miller\
Paul Anderson\
Ben M\
Ken B\
\'a0\
Ben M\
Geo Miller\
Ken B\
Paul Anderson\
*/
\f2\i0 \cf0 \cell \lastrow\row
\pard\pardeftab720\sl400\sa300

\f0 \cf2 \cb3 External resources:\
http://en.wikipedia.org/wiki/Interface_(Java)\
\pard\pardeftab720\sl400
\cf2 http://docs.oracle.com/javase/tutorial/java/concepts/interface.html\
}